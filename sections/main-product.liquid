<!-- product details section start -->
<style>
  /* Styles for the custom select box */
  .custom-select3 {
    position: relative;
    width: 200px;
    margin: 20px;
  }

  .select-selected {
    display: block;
    padding: 10px;
    border: 1px solid #ccc;
    background-color: #fff;
    cursor: pointer;
  }

  .select-items {
    display: none;
    position: absolute;
    background-color: #fff;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  }

  .select-item {
    padding: 10px;
    cursor: pointer;
  }

  /* Style when the select box is open */
  .custom-select3.open .select-items {
    display: block;
  }
</style>
<section class="product-details-sec">
  <div class="container2">
    <div class="row">
      <div class="col-md-5">
        <div class="product-thumb-slider">
          {% for media in product.media %}
            <div>
              <img src="{{ media | img_url: 'master'}}" alt="{{ product.title }}{{ forloop.index }}">
            </div>
          {% endfor %}
        </div>
      </div>
      <div class="col-md-7 product-details-col">
        <div class="row">
          <div class="col-md-12">
            <h4 class="product-details-stitle">{{ product.metafields.arena.product_category_type }}</h4>
            <h3>{{ product.title }}</h3>
            <div class="ratting">
              {% assign n = product.metafields.arena.product_rating %}

              {% if n < 1 %}
                <p>Not rated yet</p>
              {% else %}

                {% for i in (1..n) %}
                  <span>
                    <i class="fa-solid fa-star"></i>
                  </span>
                {% endfor %}
              {% endif %}


            </div>
            {{ product.metafields.arena.product_key_details }}
            {% if product.type == 'Coffee' %}
              <div class="d-flex justify-content-between">GROUND COFFEE 250G (8.8OZ)</div>
            {% endif %}
            <div class="pro-details-btn-wrap">
              {% if product.variants.size > 1 %}
                {% unless product.has_only_default_variant %}
                  <div class="custom-select3">
                    <div class="select-selected">Select an option</div>
                    <div class="select-items">
                      <div class="select-item" data-value="option1">Option 1</div>
                      <div class="select-item" data-value="option2">Option 2</div>
                      <div class="select-item" data-value="option3">Option 3</div>
                    </div>
                  </div>

                  {% for option in product.options_with_values %}
                    <div class="custom-select2">
                      <select id="productVariantOption{{ forloop.index }}">
                        {% for value in option.values %}
                          <option
                            value="{{ value | escape }}"
                            data-og="{{option.selected_value}}"
                            {% if option.selected_value == value %}selected="selected"{% endif %}>{{ value }}</option>
                        {% endfor %}
                      </select>
                    </div>
                  {% endfor %}
                {% endunless %}
              {% endif %}

              <a
                class="btn btn2 add-to-cart"
                id="add-to-cart"
                data-product-id="{{ product.id }}"
                data-variant-id="{{product.variants[0].id }}">ADD {{ product.price | money }}
                <i class="fas fa-chevron-right"></i>
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<!-- product detail section end -->

<script>
  const colorSelect = document.getElementById('productVariantOption1');
  const sizeSelect = document.getElementById('productVariantOption2');
  const variantIdSelect = document.getElementById('variant-id');
  const addToCartButton = document.getElementById('add-to-cart');

  const variantOptionsMap = {
    {% for variant in product.variants %}
      "{{ variant.options[0] }} - {{ variant.options[1] }}" : "{{ variant.id }}",{% endfor %}
  };
  console.log(variantOptionsMap)

  function updateVariantSelection() {
    const selectedSize = sizeSelect.value;
    const selectedColor = colorSelect.value;
    const selectedVariantOption = `${selectedColor} - ${selectedSize}`;
    console.log(selectedVariantOption)
    const selectedVariantId = variantOptionsMap[selectedVariantOption];
    console.log(selectedVariantId)

    addToCartButton.setAttribute('data-variant-id', selectedVariantId);

    if (selectedVariantId) {
      addToCartButton.removeAttribute('disabled');
    } else {
      addToCartButton.setAttribute('disabled', 'true');
    }
  }

  sizeSelect.addEventListener('change', updateVariantSelection);
  colorSelect.addEventListener('change', updateVariantSelection);

  updateVariantSelection();


  document.addEventListener('DOMContentLoaded', function() {
    const customSelect = document.querySelector('.custom-select3');
    const selectedOption = customSelect.querySelector('.select-selected');
    const selectItems = customSelect.querySelector('.select-items');

// Toggle the dropdown when clicking on the selected option
    selectedOption.addEventListener('click', function() {
      customSelect.classList.toggle('open');
    });

// Close the dropdown when clicking outside of it
    document.addEventListener('click', function(e) {
      if (! customSelect.contains(e.target)) {
        customSelect.classList.remove('open');
      }
    });

// Handle option selection
    selectItems.addEventListener('click', function(e) {
      if (e.target.classList.contains('select-item')) {
        const selectedValue = e.target.getAttribute('data-value');
        selectedOption.textContent = e.target.textContent;
        customSelect.classList.remove('open');

// Do something with the selected value (e.g., update form input)
        console.log('Selected value:', selectedValue);
      }
    });
  });
</script>

{% schema %}
  {
    "name": "t:sections.main-product.name",
    "tag": "section",
    "class": "section"
  }
{% endschema %}