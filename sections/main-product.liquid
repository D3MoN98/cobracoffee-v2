<!-- product details section start -->
<section class="product-details-sec">
  <div class="container2">
    <div class="row">
      <div class="col-md-5">
        <div class="product-thumb-slider">
          {% for media in product.media %}
            <div>
              <img src="{{ media | img_url: 'master'}}" alt="{{ product.title }}{{ forloop.index }}">
            </div>
          {% endfor %}
        </div>
      </div>
      <div class="col-md-7 product-details-col">
        <div class="row">
          <div class="col-md-12">
            <h4 class="product-details-stitle d-flex justify-content-between"><span>{{ product.metafields.arena.product_category_type }}</span> <span style="flex: 0 0 50%;">{{ product.metafields.arena.product_origin }}</span></h4>
            <h3>{{ product.title }}</h3>
            <div class="ratting">
              {% assign n = product.metafields.arena.product_rating %}

              {% if n < 1 %}
                <p>Not rated yet</p>
              {% else %}

                {% for i in (1..n) %}
                  <span>
                    <i class="fa-solid fa-star"></i>
                  </span>
                {% endfor %}
              {% endif %}


            </div>
            {{ product.metafields.arena.product_key_details }}
            {% if product.type == 'Coffee' %}
              <div class="d-flex justify-content-between"><span>GROUND COFFEE</span> <span style="flex: 0 0 50%;">{{ product.metafields.arena.net_weight }}</span></div>
            {% endif %}
            <div class="pro-details-btn-wrap">
              {% if product.variants.size > 1 %}
                {% unless product.has_only_default_variant %}
                  {% for option in product.options_with_values %}
                    <div class="custom-select">
                      <select id="productVariantOption{{ forloop.index }}">
                        {% for value in option.values %}
                          <option
                            value="{{ value | escape }}"
                            data-og="{{option.selected_value}}"
                            {% if option.selected_value == value %}selected="selected"{% endif %}>{{ value }}</option>
                        {% endfor %}
                      </select>
                    </div>
                  {% endfor %}
                {% endunless %}
              {% endif %}
              {% form 'product', product, class:form_classes, novalidate: 'novalidate', data-product-form: '' %}


<select name="id" id="ProductSelect-{{ section.id }}" hidden>
  {% for variant in product.variants %}
  <option value="{{ variant.id }}" {%- if variant==current_variant %} selected="selected" {%- endif -%}>
    {{ variant.title }} {%- if variant.available == false %} - {{ 'products.product.sold_out' | t }}{% endif %}
  </option>
  {% endfor %}
</select>


{% if section.settings.show_quantity_selector %}
<input type="hidden" id="myNumber" name="quantity" value="1" min="1" pattern="[0-9]*" class="input-number"
  data-quantity-input>
{% endif %}

{% render 'paywhirl-plan-selector', product: product %}

<button type="submit" name="add" {% unless current_variant.available %} aria-disabled="true" {% endunless %}
  aria-label="{% unless current_variant.available %}{{ 'products.product.sold_out' | t }}{% else %}{{ 'products.product.add_to_cart' | t }}{% endunless %}"
  class="commn-btn pulse btn btn-primary product-form__cart-submit" {% if settings.enable_ajax %}aria-haspopup="dialog"
  {% endif %} data-add-to-cart>
  <span data-add-to-cart-text>
    {{ 'products.product.add_to_cart' | t }}
  </span>
</button>

{% endform %}
              <a
                class="btn btn2 add-to-cart"
                id="add-to-cart"
                data-product-id="{{ product.id }}"
                data-variant-id="{{product.variants[0].id }}">ADD {{ product.price | money }}
                <i class="fas fa-chevron-right"></i>
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<!-- product detail section end -->

<script>



  document.addEventListener('DOMContentLoaded', function() {

    const colorSelect = document.getElementById('productVariantOption1');
    const sizeSelect = document.getElementById('productVariantOption2');
    const variantIdSelect = document.getElementById('variant-id');
    const addToCartButton = document.getElementById('add-to-cart');

    const variantOptionsMap = {
      {% for variant in product.variants %}
        "{{ variant.options[0] }} - {{ variant.options[1] }}" : "{{ variant.id }}",{% endfor %}
    };
    console.log(variantOptionsMap)

    function updateVariantSelection() {
      const selectedSize = sizeSelect.value;
      const selectedColor = colorSelect.value;
      const selectedVariantOption = `${selectedColor} - ${selectedSize}`;
      console.log(selectedVariantOption)
      const selectedVariantId = variantOptionsMap[selectedVariantOption];
      console.log(selectedVariantId)

      addToCartButton.setAttribute('data-variant-id', selectedVariantId);

      if (selectedVariantId) {
        addToCartButton.removeAttribute('disabled');
      } else {
        addToCartButton.setAttribute('disabled', 'true');
      }
    }

    sizeSelect.addEventListener('change', updateVariantSelection);
    colorSelect.addEventListener('change', updateVariantSelection);

    updateVariantSelection();



// /custom select///
    var x,
      i,
      j,
      l,
      ll,
      selElmnt,
      a,
      b,
      c;

/*look for any elements with the class "custom-select":*/
    x = document.getElementsByClassName("custom-select");
    l = x.length;
    for (i = 0; i < l; i++) {
      selElmnt = x[i].getElementsByTagName("select")[0];
      ll = selElmnt.length;

/*for each element, create a new DIV that will act as the selected item:*/
      a = document.createElement("DIV");
      a.setAttribute("class", "select-selected");
      a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
      x[i].appendChild(a);

/*for each element, create a new DIV that will contain the option list:*/
      b = document.createElement("DIV");
      b.setAttribute("class", "select-items select-hide");
      for (j = 1; j < ll; j++) {

/*for each option in the original select element,
    create a new DIV that will act as an option item:*/
        c = document.createElement("DIV");
        c.innerHTML = selElmnt.options[j].innerHTML;
        c.addEventListener("click", function(e) {

/*when an item is clicked, update the original select box,
        and the selected item:*/
          var y,
            i,
            k,
            s,
            h,
            sl,
            yl;
          s = this.parentNode.parentNode.getElementsByTagName("select")[0];
          sl = s.length;
          h = this.parentNode.previousSibling;
          for (i = 0; i < sl; i++) {
            if (s.options[i].innerHTML == this.innerHTML) {
              s.selectedIndex = i;
              h.innerHTML = this.innerHTML;
              $(s).val($(s).val()).change();
              y = this.parentNode.getElementsByClassName("same-as-selected");
              yl = y.length;
              for (k = 0; k < yl; k++) {
                y[k].removeAttribute("class");
              }
              this.setAttribute("class", "same-as-selected");
              updateVariantSelection()
              break;
            }
          }
          h.click();
        });
        b.appendChild(c);
      }
      x[i].appendChild(b);
      a.addEventListener("click", function(e) {

/*when the select box is clicked, close any other select boxes,
      and open/close the current select box:*/
        e.stopPropagation();
        closeAllSelect(this);
        this.nextSibling.classList.toggle("select-hide");
        this.classList.toggle("select-arrow-active");
      });
    }
    function closeAllSelect(elmnt) {

/*a function that will close all select boxes in the document,
  except the current select box:*/
      var x,
        y,
        i,
        xl,
        yl,
        arrNo = [];
      x = document.getElementsByClassName("select-items");
      y = document.getElementsByClassName("select-selected");
      xl = x.length;
      yl = y.length;
      for (i = 0; i < yl; i++) {
        if (elmnt == y[i]) {
          arrNo.push(i);
        } else {
          y[i].classList.remove("select-arrow-active");
        }
      }
      for (i = 0; i < xl; i++) {
        if (arrNo.indexOf(i)) {
          x[i].classList.add("select-hide");
        }
      }
    }

/*if the user clicks anywhere outside the select box,
then close all select boxes:*/
    document.addEventListener("click", closeAllSelect);

// document end
  });
</script>

{% schema %}
  {
    "name": "t:sections.main-product.name",
    "tag": "section",
    "class": "section"
  }
{% endschema %}